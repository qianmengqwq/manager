/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardUsersImport } from './routes/dashboard/users'
import { Route as DashboardSignupImport } from './routes/dashboard/signup'
import { Route as DashboardLogsImport } from './routes/dashboard/logs'
import { Route as DashboardCommonImport } from './routes/dashboard/common'
import { Route as DashboardCollegeImport } from './routes/dashboard/college'
import { Route as DashboardActivitiesImport } from './routes/dashboard/activities'
import { Route as DashboardSignupActivityIdImport } from './routes/dashboard/signup.$activityId'
import { Route as DashboardAnalyticsActivityIdImport } from './routes/dashboard/analytics.$activityId'
import { Route as DashboardActivitiesActivityIdImport } from './routes/dashboard/activities.$activityId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardUsersRoute = DashboardUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSignupRoute = DashboardSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardLogsRoute = DashboardLogsImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCommonRoute = DashboardCommonImport.update({
  id: '/common',
  path: '/common',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCollegeRoute = DashboardCollegeImport.update({
  id: '/college',
  path: '/college',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardActivitiesRoute = DashboardActivitiesImport.update({
  id: '/activities',
  path: '/activities',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSignupActivityIdRoute = DashboardSignupActivityIdImport.update({
  id: '/$activityId',
  path: '/$activityId',
  getParentRoute: () => DashboardSignupRoute,
} as any)

const DashboardAnalyticsActivityIdRoute =
  DashboardAnalyticsActivityIdImport.update({
    id: '/analytics/$activityId',
    path: '/analytics/$activityId',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardActivitiesActivityIdRoute =
  DashboardActivitiesActivityIdImport.update({
    id: '/$activityId',
    path: '/$activityId',
    getParentRoute: () => DashboardActivitiesRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/activities': {
      id: '/dashboard/activities'
      path: '/activities'
      fullPath: '/dashboard/activities'
      preLoaderRoute: typeof DashboardActivitiesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/college': {
      id: '/dashboard/college'
      path: '/college'
      fullPath: '/dashboard/college'
      preLoaderRoute: typeof DashboardCollegeImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/common': {
      id: '/dashboard/common'
      path: '/common'
      fullPath: '/dashboard/common'
      preLoaderRoute: typeof DashboardCommonImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/logs': {
      id: '/dashboard/logs'
      path: '/logs'
      fullPath: '/dashboard/logs'
      preLoaderRoute: typeof DashboardLogsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/signup': {
      id: '/dashboard/signup'
      path: '/signup'
      fullPath: '/dashboard/signup'
      preLoaderRoute: typeof DashboardSignupImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/activities/$activityId': {
      id: '/dashboard/activities/$activityId'
      path: '/$activityId'
      fullPath: '/dashboard/activities/$activityId'
      preLoaderRoute: typeof DashboardActivitiesActivityIdImport
      parentRoute: typeof DashboardActivitiesImport
    }
    '/dashboard/analytics/$activityId': {
      id: '/dashboard/analytics/$activityId'
      path: '/analytics/$activityId'
      fullPath: '/dashboard/analytics/$activityId'
      preLoaderRoute: typeof DashboardAnalyticsActivityIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/signup/$activityId': {
      id: '/dashboard/signup/$activityId'
      path: '/$activityId'
      fullPath: '/dashboard/signup/$activityId'
      preLoaderRoute: typeof DashboardSignupActivityIdImport
      parentRoute: typeof DashboardSignupImport
    }
  }
}

// Create and export the route tree

interface DashboardActivitiesRouteChildren {
  DashboardActivitiesActivityIdRoute: typeof DashboardActivitiesActivityIdRoute
}

const DashboardActivitiesRouteChildren: DashboardActivitiesRouteChildren = {
  DashboardActivitiesActivityIdRoute: DashboardActivitiesActivityIdRoute,
}

const DashboardActivitiesRouteWithChildren =
  DashboardActivitiesRoute._addFileChildren(DashboardActivitiesRouteChildren)

interface DashboardSignupRouteChildren {
  DashboardSignupActivityIdRoute: typeof DashboardSignupActivityIdRoute
}

const DashboardSignupRouteChildren: DashboardSignupRouteChildren = {
  DashboardSignupActivityIdRoute: DashboardSignupActivityIdRoute,
}

const DashboardSignupRouteWithChildren = DashboardSignupRoute._addFileChildren(
  DashboardSignupRouteChildren,
)

interface DashboardRouteChildren {
  DashboardActivitiesRoute: typeof DashboardActivitiesRouteWithChildren
  DashboardCollegeRoute: typeof DashboardCollegeRoute
  DashboardCommonRoute: typeof DashboardCommonRoute
  DashboardLogsRoute: typeof DashboardLogsRoute
  DashboardSignupRoute: typeof DashboardSignupRouteWithChildren
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAnalyticsActivityIdRoute: typeof DashboardAnalyticsActivityIdRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardActivitiesRoute: DashboardActivitiesRouteWithChildren,
  DashboardCollegeRoute: DashboardCollegeRoute,
  DashboardCommonRoute: DashboardCommonRoute,
  DashboardLogsRoute: DashboardLogsRoute,
  DashboardSignupRoute: DashboardSignupRouteWithChildren,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAnalyticsActivityIdRoute: DashboardAnalyticsActivityIdRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/activities': typeof DashboardActivitiesRouteWithChildren
  '/dashboard/college': typeof DashboardCollegeRoute
  '/dashboard/common': typeof DashboardCommonRoute
  '/dashboard/logs': typeof DashboardLogsRoute
  '/dashboard/signup': typeof DashboardSignupRouteWithChildren
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/activities/$activityId': typeof DashboardActivitiesActivityIdRoute
  '/dashboard/analytics/$activityId': typeof DashboardAnalyticsActivityIdRoute
  '/dashboard/signup/$activityId': typeof DashboardSignupActivityIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard/activities': typeof DashboardActivitiesRouteWithChildren
  '/dashboard/college': typeof DashboardCollegeRoute
  '/dashboard/common': typeof DashboardCommonRoute
  '/dashboard/logs': typeof DashboardLogsRoute
  '/dashboard/signup': typeof DashboardSignupRouteWithChildren
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/activities/$activityId': typeof DashboardActivitiesActivityIdRoute
  '/dashboard/analytics/$activityId': typeof DashboardAnalyticsActivityIdRoute
  '/dashboard/signup/$activityId': typeof DashboardSignupActivityIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/activities': typeof DashboardActivitiesRouteWithChildren
  '/dashboard/college': typeof DashboardCollegeRoute
  '/dashboard/common': typeof DashboardCommonRoute
  '/dashboard/logs': typeof DashboardLogsRoute
  '/dashboard/signup': typeof DashboardSignupRouteWithChildren
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/activities/$activityId': typeof DashboardActivitiesActivityIdRoute
  '/dashboard/analytics/$activityId': typeof DashboardAnalyticsActivityIdRoute
  '/dashboard/signup/$activityId': typeof DashboardSignupActivityIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/activities'
    | '/dashboard/college'
    | '/dashboard/common'
    | '/dashboard/logs'
    | '/dashboard/signup'
    | '/dashboard/users'
    | '/dashboard/'
    | '/dashboard/activities/$activityId'
    | '/dashboard/analytics/$activityId'
    | '/dashboard/signup/$activityId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard/activities'
    | '/dashboard/college'
    | '/dashboard/common'
    | '/dashboard/logs'
    | '/dashboard/signup'
    | '/dashboard/users'
    | '/dashboard'
    | '/dashboard/activities/$activityId'
    | '/dashboard/analytics/$activityId'
    | '/dashboard/signup/$activityId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/activities'
    | '/dashboard/college'
    | '/dashboard/common'
    | '/dashboard/logs'
    | '/dashboard/signup'
    | '/dashboard/users'
    | '/dashboard/'
    | '/dashboard/activities/$activityId'
    | '/dashboard/analytics/$activityId'
    | '/dashboard/signup/$activityId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/activities",
        "/dashboard/college",
        "/dashboard/common",
        "/dashboard/logs",
        "/dashboard/signup",
        "/dashboard/users",
        "/dashboard/",
        "/dashboard/analytics/$activityId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dashboard/activities": {
      "filePath": "dashboard/activities.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/activities/$activityId"
      ]
    },
    "/dashboard/college": {
      "filePath": "dashboard/college.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/common": {
      "filePath": "dashboard/common.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/logs": {
      "filePath": "dashboard/logs.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/signup": {
      "filePath": "dashboard/signup.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/signup/$activityId"
      ]
    },
    "/dashboard/users": {
      "filePath": "dashboard/users.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/activities/$activityId": {
      "filePath": "dashboard/activities.$activityId.tsx",
      "parent": "/dashboard/activities"
    },
    "/dashboard/analytics/$activityId": {
      "filePath": "dashboard/analytics.$activityId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/signup/$activityId": {
      "filePath": "dashboard/signup.$activityId.tsx",
      "parent": "/dashboard/signup"
    }
  }
}
ROUTE_MANIFEST_END */
